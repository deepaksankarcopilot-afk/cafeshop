{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RoleManagementComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function RoleManagementComponent_li_8_Template_button_click_2_listener() {\n      const role_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeRole(role_r2));\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const role_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", role_r2, \" \");\n  }\n}\nexport let RoleManagementComponent = /*#__PURE__*/(() => {\n  class RoleManagementComponent {\n    constructor() {\n      this.roles = [];\n      this.newRole = '';\n    }\n    addRole() {\n      if (this.newRole) {\n        this.roles.push(this.newRole);\n        this.newRole = '';\n      }\n    }\n    removeRole(role) {\n      this.roles = this.roles.filter(r => r !== role);\n    }\n    static {\n      this.ɵfac = function RoleManagementComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RoleManagementComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RoleManagementComponent,\n        selectors: [[\"app-role-management\"]],\n        decls: 9,\n        vars: 2,\n        consts: [[1, \"container\", \"mt-5\"], [1, \"mb-4\"], [1, \"mb-3\", \"d-flex\"], [\"type\", \"text\", \"placeholder\", \"Enter new role\", 1, \"form-control\", \"me-2\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n        template: function RoleManagementComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n            i0.ɵɵtext(2, \"Role Management\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2)(4, \"input\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RoleManagementComponent_Template_input_ngModelChange_4_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.newRole, $event) || (ctx.newRole = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function RoleManagementComponent_Template_button_click_5_listener() {\n              return ctx.addRole();\n            });\n            i0.ɵɵtext(6, \"Add Role\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"ul\", 5);\n            i0.ɵɵtemplate(8, RoleManagementComponent_li_8_Template, 4, 1, \"li\", 6);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newRole);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n        encapsulation: 2\n      });\n    }\n  }\n  return RoleManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}